# Azure DevOps Pipeline for .NET Framework 4.8 Web API + Angular UI

trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  uiProjectFolder: 'ui'   # Angular project folder ka naam (aapke repo me 'ui')

steps:
  # 1Ô∏è‚É£ Clean obj/bin folders safely
  - script: |
      if exist "$(Build.SourcesDirectory)\obj" rd /s /q "$(Build.SourcesDirectory)\obj"
      if exist "$(Build.SourcesDirectory)\bin" rd /s /q "$(Build.SourcesDirectory)\bin"
    displayName: 'Clean obj and bin folders'

  # 2Ô∏è‚É£ Install NuGet
  - task: NuGetToolInstaller@1
    displayName: 'Install NuGet'

  # 3Ô∏è‚É£ Restore NuGet packages
  - task: NuGetCommand@2
    inputs:
      restoreSolution: '$(solution)'
    displayName: 'Restore NuGet Packages'

  # 4Ô∏è‚É£ Build solution (Web API + class libraries)
  - task: VSBuild@1
    inputs:
      solution: '$(solution)'
      msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:PackageLocation="$(build.artifactStagingDirectory)"'
      platform: '$(buildPlatform)'
      configuration: '$(buildConfiguration)'
    displayName: 'Build Web API Project and Libraries'

  # 5Ô∏è‚É£ Run Unit Tests (optional)
  - task: VSTest@2
    inputs:
      platform: '$(buildPlatform)'
      configuration: '$(buildConfiguration)'
    displayName: 'Run Unit Tests'

  # 6Ô∏è‚É£ Setup Node.js (for Angular build)
  - task: NodeTool@0
    inputs:
      versionSpec: '18.x'
    displayName: 'Install Node.js'

  # 7Ô∏è‚É£ Install Angular dependencies
  - script: |
      cd $(Build.SourcesDirectory)/$(uiProjectFolder)
      npm install
    displayName: 'Install npm packages (Angular)'

  # 8Ô∏è‚É£ Build Angular for production
  - script: |
      cd $(Build.SourcesDirectory)/$(uiProjectFolder)
      npm run build -- --configuration production
    displayName: 'Build Angular UI (Production)'

  # 9Ô∏è‚É£ Copy Angular dist into artifact staging directory
  - task: CopyFiles@2
    inputs:
      SourceFolder: '$(Build.SourcesDirectory)/$(uiProjectFolder)/dist'
      TargetFolder: '$(build.artifactStagingDirectory)/ui-dist'
    displayName: 'Copy Angular dist to Artifacts'

  # üîü Publish build artifacts (API + Angular UI)
  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(build.artifactStagingDirectory)'
      ArtifactName: 'drop'
      publishLocation: 'Container'
    displayName: 'Publish Artifacts'
